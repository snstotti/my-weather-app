{"version":3,"sources":["api/api.js","components/weatherReducer/weatherReducer.ts","components/searchForm/SearchForm.js","components/helpersFunc/helpersFunc.js","components/weatherBriefly/weatherBriefly.js","components/weatherBriefly/WeatherBrieflyComponent.js","components/weatherReducer/weatherDailyReducer.ts","components/weatherDaily/WeatherColumn.js","components/weatherDaily/extraData/ExtraData.js","components/weatherDaily/WeatherDaily.js","components/helpersFunc/customWrapper/CustomWrapper.js","components/weatherDaily/WeatherDailyComponent.js","components/weatherHourly/WeatherHourly.js","components/weatherHourly/WeatherHourlyComponent.js","components/dailyForecast/DailyForecast.js","components/dailyForecast/DailyForecastContainer.js","image/sun_up.svg","image/sun_down.svg","components/weatherCurrent/WeatherCurrent.js","components/weatherCurrent/WeatherCurrentContainer.js","image/google.svg","image/telega.svg","image/viber.svg","image/git_hub.svg","components/footer/Footer.js","components/header/Header.js","App.js","components/redux/store.ts","index.tsx"],"names":["instanceCurentWeather","Axios","create","baseURL","responseType","instanceIcon","getIconImage","i","get","then","responce","request","responseURL","catch","e","console","log","getWeather","city","data","getWeatherDaily","lat","lon","WEATHER_DAILY","SET_TEMP","SET_EXTRA_DATA","SET_LCALITY","SET_URL_IMAGE","SET_NAME_LOCALITY","SET_COORDINATES","SET_ERROR","initialState","temperature","extraData","locality","imageUrl","nameLocality","onError","coordinates","setLocality","type","setUrlImage","url","getCoordinates","obj","errorProcessing","er","weatherReducer","state","action","objData","name","SearchForm","Form","useForm","form","onFinish","values","text","resetFields","initialValues","remember","style","display","margin","Item","placeholder","width","htmlType","numTemp","num","Math","round","WeatherBriefly","urlIcon","description","temp","feels_like","humidity","image","src","className","alt","toUpperCase","slice","compose","connect","onLoading","getExtraData","dispatch","a","response","weather","main","coord","getIconUrl","icon","useEffect","SET_LOADING","SET_TEMP_DAILY","SET_TEMP_CURRENT","SET_WIND_DAILY","SET_EXTRA_DATA_DAILY","SET_URL_ICON_DAILY","SET_HOURLY_DATA","SET_DAILY_FORECAST","SET_DETAILED_WEATHER","dailyTemp","pop","hourlyTemp","extraDataDaily","iconDailyUrl","wind","hourlyData","dailyForecast","timeZone","detailedWeather","loadingProcessing","load","getCurentWeathe","arr","setHourlyData","getDetailedWeather","weatherDailyReducer","time","hourlyArr","map","el","date","dt","dailyArr","tempMin","min","tempMax","max","speed","deg","WeatherColumn","title","ExtraData","extra","dataExtra","dataDescription","WeatherDaily","morn","day","eve","night","castumWind","newHumidity","floor","castomTemp","castomWind","weatherHelper","morningColumn","dayColumn","eveColumn","nightColumn","CustomWrapper","children","getDailyWeather","base","daily","timezone_offset","wind_speed","wind_deg","hourly","current","imageDailyWeather","tip","newNum","WeatherHourly","hour","clock","Date","toLocaleTimeString","DailyForecast","minTemperature","maxTemperature","dat","setDayOfWeek","curentDate","getDate","dayOfWeek","getDay","setSun","WeatherCurrent","pressure","dew_point","uvi","clouds","sunrise","sunset","sun","color","sun_up","sun_down","paragraph","itemListRender","elem","sign","Footer","href","google","viber","github","telega","Header","toLocaleDateString","split","length","join","props","reducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22ccf5d5.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\n\r\n\r\nlet API_KEY_CURENT = `&units=metric&lang=ru&appid=393c06f5cc22b09161f54b62d6e44530`\r\nlet API_KEY_DAILY = `&exclude=minutely&units=metric&lang=ru&appid=393c06f5cc22b09161f54b62d6e44530`\r\nconst WEATHER_CURRENT = `weather?q=`\r\nconst WEATHER_DAILY = `onecall?`\r\nconst LON = `lon=`\r\nconst LAT = `lat=`\r\n\r\n\r\nconst instanceCurentWeather = Axios.create({\r\n    baseURL: `https://api.openweathermap.org/data/2.5/`,\r\n    responseType: \"json\"\r\n})\r\nconst instanceIcon = Axios.create({\r\n    baseURL: `https://openweathermap.org/img/wn/`,\r\n    responseType: \"json\"\r\n})\r\n\r\n\r\nconst dop = '@2x.png'\r\n\r\nexport const getIconImage = {\r\n    getI(i) {\r\n        if(!i){return}\r\n        return instanceIcon.get(`${i}${dop}`)\r\n            .then(responce => responce.request.responseURL)\r\n            .catch(e=>{console.log(e);})\r\n    }\r\n}\r\n\r\nexport const getWeather = {\r\n\r\n    getExtraData(city) {\r\n        \r\n        return instanceCurentWeather.get(WEATHER_CURRENT + city + API_KEY_CURENT)\r\n            .then(responce => responce.data)\r\n    },\r\n}\r\n\r\nexport const getWeatherDaily = {\r\n    \r\n    getDailyData(lat, lon) {\r\n        if(!lat || !lon){return}\r\n        return instanceCurentWeather.get(WEATHER_DAILY + LAT + lat + '&' + LON + lon + API_KEY_DAILY)\r\n            .then(responce => responce.data)\r\n    },\r\n}\r\n\r\n\r\n","import {getWeather,getIconImage } from '../../api/api'\r\n\r\nconst SET_TEMP = 'SET_TEMP'\r\nconst SET_EXTRA_DATA = 'SET_EXTRA_DATA'\r\nconst SET_LCALITY = 'SET_LCALITY'\r\nconst SET_URL_IMAGE = 'SET_URL_IMAGE'\r\nconst SET_NAME_LOCALITY = 'SET_NAME_LOCALITY'\r\nconst SET_COORDINATES = 'SET_COORDINATES'\r\nconst SET_ERROR = 'SET_ERROR'\r\n\r\n\r\ntype TypeinitialState = {\r\n    temperature: any,\r\n    extraData: any,\r\n    locality: any,\r\n    imageUrl: string,\r\n    nameLocality: string,\r\n    onError:boolean,\r\n    coordinates:{}\r\n}\r\n\r\nlet initialState:TypeinitialState = {\r\n    temperature: {},\r\n    extraData: {},\r\n    locality: 'Тольятти',\r\n    imageUrl: '',\r\n    nameLocality: '',\r\n    onError: false,\r\n    coordinates: {}\r\n    \r\n}\r\n\r\nconst weatherReducer =(state = initialState, action:any)=>{\r\n\r\n    switch(action.type) {\r\n      \r\n        case SET_TEMP:{\r\n            \r\n            return {\r\n                ...state, temperature : action.obj\r\n            }\r\n        }\r\n        case SET_EXTRA_DATA:{\r\n            \r\n            return {\r\n                ...state, extraData : action.objData\r\n            }\r\n        }\r\n        case SET_LCALITY:{\r\n            \r\n            return {\r\n                ...state, locality : action.locality\r\n            }\r\n        }\r\n        case SET_URL_IMAGE:{\r\n            \r\n            return {\r\n                ...state, imageUrl : action.url\r\n            }\r\n        }\r\n        case SET_NAME_LOCALITY:{\r\n            \r\n            return {\r\n                ...state, nameLocality : action.name\r\n            }\r\n        }\r\n        case SET_COORDINATES:{\r\n            \r\n            return {\r\n                ...state, coordinates : action.obj\r\n            }\r\n        }\r\n        \r\n        case SET_ERROR:{\r\n            \r\n            return {\r\n                ...state, onError : action.er\r\n            }\r\n        }\r\n        \r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const getTempSuccess = (obj:any) => ({ type: SET_TEMP, obj})\r\nexport const setExtraData = (objData:any) => ({ type: SET_EXTRA_DATA, objData})\r\nexport const setLocality = (locality:any) => ({ type: SET_LCALITY, locality})\r\nexport const setUrlImage = (url:any) => ({ type: SET_URL_IMAGE, url})\r\nexport const setNameLocality = (name:any) => ({ type: SET_NAME_LOCALITY, name})\r\nexport const getCoordinates = (obj:any) => ({ type: SET_COORDINATES, obj})\r\nexport const errorProcessing = (er:boolean) => ({ type: SET_ERROR, er})\r\n\r\n\r\n    \r\nexport const getExtraData = (city:any) => async(dispatch:any)=>{\r\n    \r\n    try{\r\n        let response = await getWeather.getExtraData(city)\r\n        \r\n        \r\n        \r\n        dispatch(setExtraData(response.weather[0]))\r\n        dispatch(setNameLocality(response.name))\r\n        dispatch(getTempSuccess(response.main))\r\n        dispatch(getCoordinates(response.coord))\r\n        dispatch(errorProcessing(false))\r\n    } catch(e){\r\n        dispatch(errorProcessing(true))\r\n        console.log('Нет такого города');\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport const getIconUrl = (icon:any='01n') => async(dispatch:any)=>{\r\n    try{\r\n        let response = await getIconImage.getI(icon)\r\n        dispatch(setUrlImage(response))\r\n    } catch(e){\r\n        \r\n        console.log('Нет Иконки');\r\n        \r\n    }\r\n   \r\n}\r\n\r\n\r\n\r\n \r\n\r\nexport default weatherReducer","import React from 'react';\r\n\r\nimport { Input, Form, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nconst SearchForm = ({ setLocality }) => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        if(values.text){\r\n            setLocality(values.text)\r\n        onReset()\r\n        }\r\n        \r\n    } \r\n\r\n  \r\n\r\n    return (\r\n        <Form \r\n            form={form} \r\n           \r\n            name=\"basic\"\r\n            onFinish={onFinish}  \r\n            initialValues={{ remember: true }} \r\n            style={{ display: 'flex', margin: '10px' }}\r\n             >\r\n\r\n            <Form.Item\r\n              \r\n                placeholder=\"input search text\"\r\n                style={{ width: 200, margin: '0' }}\r\n                name='text' >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" >\r\n                        search\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchForm\r\n\r\n\r\n","export const numTemp = num => {\r\n    if (!num) {\r\n        return num\r\n    }\r\n    return `${Math.round(num)}°`\r\n}\r\n\r\nexport const roseOfWind = num => {\r\n    if (num >= 0 && num < 22.5) {\r\n        return \"Северный\"\r\n    }\r\n    if (num >= 22.5 && num < 67.5) {\r\n        return \"Северо-Восточный\"\r\n    }\r\n    if (num >= 67.5 && num < 112.5) {\r\n        return \"Восточный\"\r\n    }\r\n    if (num >= 112.5 && num < 157.5) {\r\n        return \"Юго-Восточный\"\r\n    }\r\n    if (num >= 157.5 && num < 202.5) {\r\n        return \"Южный\"\r\n    }\r\n    if (num >= 202.5 && num < 247.5) {\r\n        return \"Юго-Западный\"\r\n    }\r\n    if (num >= 247.5 && num < 292.5) {\r\n        return \"Западный\"\r\n    }\r\n    if (num >= 292.5 && num < 337.5) {\r\n        return \"Северо-Западный\"\r\n    }\r\n    if (num >= 337.5) {\r\n        return \"Северный\"\r\n    }\r\n    console.log(num)\r\n  \r\n}\r\n   \r\n\r\n\r\n","import React from 'react';\r\nimport { numTemp } from '../helpersFunc/helpersFunc';\r\nimport './weatherBriefly.scss'\r\n\r\nconst WeatherBriefly = ({\r\n    urlIcon,\r\n    onError,\r\n    nameLocality,\r\n    description,\r\n    temperature,\r\n    \r\n}) => {\r\n\r\n    const { temp, feels_like, humidity} = temperature\r\n\r\n    let icon = <img src={urlIcon} className=\"weather-breafly__icon\" alt=\"icon weather\" /> \r\n    \r\n    let image = urlIcon ? icon : '...Loading'\r\n\r\n    const desc = text => {\r\n        if (!text) {\r\n            return text\r\n        }\r\n        return text[0].toUpperCase() + text.slice(1)\r\n    }\r\n    \r\n    return (\r\n        <div className='weather-breafly'>\r\n            <div className='weather-breafly__card'>\r\n                <h2 className='weather-breafly__title'>\r\n                    Погода: {!onError && nameLocality}\r\n                </h2>\r\n                <h2 className='weather-breafly__degree'>{numTemp(temp)}</h2>\r\n                <p className='weather-breafly__feels-like'>\r\n                    Ощущается как: {numTemp(feels_like)}\r\n                </p>\r\n                \r\n                \r\n                <p className='weather-breafly__humidity'>\r\n                    Влажность: {humidity}%\r\n                </p>\r\n            </div>\r\n\r\n\r\n\r\n            <div className='weather-breafly__icon-block'>\r\n                {image}\r\n                <span className='weather-breafly__description'>{desc(description)}</span>\r\n                {/* <p className='weather-breafly__range'>{numTemp(temp_min)} / {numTemp(temp_max)}</p> */}\r\n            </div>\r\n\r\n\r\n           \r\n\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default WeatherBriefly\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { getExtraData, getIconUrl, setLocality, } from '../../components/weatherReducer/weatherReducer';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport WeatherBriefly from './weatherBriefly';\r\n\r\n\r\nconst WeatherBrieflyComponent=({\r\n    temperature,\r\n     extraData,\r\n      locality,\r\n      getExtraData,\r\n      getIconUrl,\r\n      urlIcon,\r\n      nameLocality,\r\n      onError\r\n})=> {\r\n\r\n  const { description, icon } = extraData\r\n \r\n \r\n  useEffect(() => {\r\n    getIconUrl(icon)\r\n    getExtraData(locality)\r\n  }, [locality,getExtraData,icon,getIconUrl])\r\n \r\n  \r\n\r\n  return (\r\n    <div >\r\n\r\n        <WeatherBriefly\r\n          urlIcon={urlIcon}\r\n          onError={onError}\r\n          nameLocality={nameLocality}\r\n          description={description}\r\n          temperature={temperature} />   \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locality: state.weatherReducer.locality,\r\n    temperature: state.weatherReducer.temperature,\r\n    extraData: state.weatherReducer.extraData,\r\n    urlIcon: state.weatherReducer.imageUrl,\r\n    nameLocality: state.weatherReducer.nameLocality,\r\n    onError: state.weatherReducer.onError,\r\n    onLoading: state.weatherReducer.onLoading,\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getExtraData,getIconUrl, setLocality })\r\n)(WeatherBrieflyComponent)\r\n","import { getIconImage, getWeatherDaily } from '../../api/api'\r\n\r\n\r\nconst SET_LOADING = 'SET_LOADING'\r\nconst SET_TEMP_DAILY = 'SET_TEMP_DAILY'\r\nconst SET_TEMP_CURRENT = 'SET_TEMP_CURRENT'\r\nconst SET_WIND_DAILY = 'SET_WIND_DAILY'\r\nconst SET_EXTRA_DATA_DAILY = 'SET_EXTRA_DATA_DAILY'\r\nconst SET_URL_ICON_DAILY = 'SET_URL_ICON_DAILY'\r\nconst SET_HOURLY_DATA = 'SET_HOURLY_DATA'\r\nconst SET_DAILY_FORECAST = 'SET_DAILY_FORECAST'\r\nconst SET_DETAILED_WEATHER = 'SET_DETAILED_WEATHER'\r\n\r\n\r\n\r\n\r\ntype TypeinitialState = {\r\n    onLoading:boolean\r\n    dailyTemp:{}\r\n    pop:{}\r\n    humidity:''\r\n    hourlyTemp:[]\r\n    extraDataDaily:{}\r\n    iconDailyUrl: string\r\n    wind:{}\r\n    hourlyData:any\r\n    dailyForecast:any\r\n    timeZone: 0\r\n    detailedWeather: {}\r\n}\r\n\r\nlet initialState:TypeinitialState = {\r\n    onLoading: false,\r\n    dailyTemp:{},\r\n    pop:{},\r\n    humidity:'',\r\n    hourlyTemp:[],\r\n    extraDataDaily:{},\r\n    iconDailyUrl: '',\r\n    wind:{},\r\n    hourlyData:[],\r\n    dailyForecast:[],\r\n    timeZone: 0,\r\n    detailedWeather: {}\r\n}\r\n\r\nconst weatherDailyReducer =(state = initialState, action:any)=>{\r\n\r\n    switch(action.type) {\r\n      \r\n        case SET_LOADING:{\r\n            return {\r\n                ...state, onLoading : action.load\r\n            }\r\n        } \r\n        \r\n        case SET_TEMP_DAILY:{\r\n           \r\n            return {\r\n                ...state, \r\n                dailyTemp : action.temp,\r\n                pop: action.pop,\r\n                humidity: action.humidity,\r\n                timeZone: action.time\r\n            }\r\n        } \r\n        case SET_TEMP_CURRENT:{\r\n            return {\r\n                ...state, hourlyTemp : action.arr\r\n            }\r\n        } \r\n        case SET_HOURLY_DATA:{\r\n                let hourlyArr = action.arr.slice(0, 6).map((el:any)=>{\r\n                    return{\r\n                        date:el.dt,\r\n                        temperature: el.temp,\r\n                        icon:el.weather[0].icon,\r\n                        pop:el.pop\r\n                    }\r\n                    \r\n                })\r\n            return {\r\n                ...state, hourlyData : hourlyArr\r\n            }\r\n        } \r\n        case SET_DAILY_FORECAST:{\r\n                let dailyArr = action.arr.slice(0, 6).map((el:any)=>{\r\n                    return{\r\n                        date:el.dt,\r\n                        tempMin: el.temp.min,\r\n                        tempMax: el.temp.max,\r\n                        icon:el.weather[0].icon,\r\n                        pop:el.pop\r\n                    }\r\n                    \r\n                })\r\n            return {\r\n                ...state, dailyForecast : dailyArr\r\n            }\r\n        } \r\n        case SET_DETAILED_WEATHER:{\r\n               \r\n            return {\r\n                ...state, detailedWeather : action.arr\r\n            }\r\n        } \r\n        case SET_EXTRA_DATA_DAILY:{\r\n            return {\r\n                ...state, extraDataDaily : action.obj\r\n            }\r\n        } \r\n        case SET_URL_ICON_DAILY:{\r\n            return {\r\n                ...state, iconDailyUrl : action.url\r\n            }\r\n        } \r\n        case SET_WIND_DAILY:{\r\n            return {\r\n                ...state, wind : {speed:action.speed, deg:action.deg}\r\n            }\r\n        } \r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const loadingProcessing = (load:boolean) => ({ type: SET_LOADING, load})\r\nexport const getDailyWeathe = (temp:any,pop:any,humidity:any,time:any) => ({ type: SET_TEMP_DAILY, temp,pop,humidity,time})\r\nexport const getCurentWeathe = (arr:any) => ({ type: SET_TEMP_CURRENT, arr})\r\nexport const setExtraDataDaily = (obj:any) => ({ type: SET_EXTRA_DATA_DAILY, obj})\r\nexport const setUrlIconDaily = (url:any) => ({ type: SET_URL_ICON_DAILY, url})\r\nexport const setWindDaily = (speed:any,deg:any) => ({ type: SET_WIND_DAILY, speed,deg})\r\nexport const setHourlyData = (arr:any) => ({ type: SET_HOURLY_DATA, arr})\r\nexport const getDailyForecast = (arr:any) => ({ type: SET_DAILY_FORECAST, arr})\r\nexport const getDetailedWeather = (arr:any) => ({ type: SET_DETAILED_WEATHER, arr})\r\n\r\n\r\n\r\n\r\n    \r\nexport const getDailyWeather = (lat:string , lon:string) => async(dispatch:any)=>{\r\n    \r\n    try{\r\n        let response = await getWeatherDaily.getDailyData(lat, lon)\r\n       \r\n        \r\n        let base = response.daily[0]\r\n        dispatch(getDailyForecast(response.daily))\r\n        dispatch(getDailyWeathe(base.temp,base.pop, base.humidity,response.timezone_offset))\r\n        dispatch(setWindDaily(base.wind_speed,base.wind_deg))\r\n        dispatch(setHourlyData(response.hourly))\r\n        dispatch(setExtraDataDaily(base.weather[0]))\r\n\r\n        dispatch(getCurentWeathe(response.daily[0]))\r\n        dispatch(getDetailedWeather(response.current))\r\n      \r\n        dispatch(loadingProcessing(false))\r\n     \r\n        \r\n    } catch(e){\r\n        dispatch(loadingProcessing(true))\r\n    }\r\n}\r\n\r\n\r\nexport const imageDailyWeather =(icon:any)=>async (dispatch:any)=> {\r\n    try{\r\n        let response = await getIconImage.getI(icon)\r\n        \r\n        dispatch(setUrlIconDaily(response))\r\n    }catch(e){\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n \r\n\r\nexport default weatherDailyReducer","import React from 'react';\r\nimport './weatherColumn.scss'\r\n\r\n\r\n\r\nconst WeatherColumn= ({\r\n    temp,title\r\n}) => {\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className='weather-column'>\r\n            <div className='weather-column__section'>\r\n            \r\n                <div className='weather-column__title'>\r\n                    <p >{title}</p>\r\n                </div>\r\n                <div className='weather-column__value'>\r\n                    <p >{temp}</p>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default WeatherColumn\r\n\r\n\r\n","import React from 'react';\r\nimport './extraData.scss'\r\n\r\nconst ExtraData =(extra,dataExtra,description,dataDescription)=>{\r\n\r\n    return (\r\n        <div className='extra'>\r\n            <div className='extra__data'>\r\n                <p>{extra} {dataExtra}</p>\r\n            </div>\r\n\r\n            <div className='extra__description'>\r\n                <p >{description} {dataDescription}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ExtraData","import React from 'react';\r\nimport WeatherColumn from './WeatherColumn';\r\nimport './weatherDaily.scss'\r\n\r\nimport ExtraData from './extraData/ExtraData';\r\nimport { numTemp, roseOfWind } from '../helpersFunc/helpersFunc';\r\n// import 'antd/dist/antd.css';\r\n\r\n\r\nconst WeatherDaily = ({\r\n    nameLocality, dailyTemp, humidity, pop, wind\r\n}) => {\r\n\r\n    const { morn, day, eve, night, min, max } = dailyTemp\r\n    const { speed,deg } = wind\r\n    \r\n    let castumWind = roseOfWind(deg)\r\n    \r\n\r\n    let newHumidity = ExtraData('Вероятность Осадков', `${Math.floor(pop*100)}%`, 'Влажность', `${humidity}%` )\r\n    let castomTemp = ExtraData( `${numTemp(min)} / ${numTemp(max)}`,'','мин/макс ℃' )\r\n    let castomWind = ExtraData('Ветер',castumWind, 'Скорость ветра', `${Math.floor(speed)} м/с`)\r\n\r\n\r\n    const weatherHelper = (title, temp, humidity, pop, ) => {\r\n\r\n        return (\r\n            <WeatherColumn\r\n                title={title}\r\n                temp={numTemp(temp)}\r\n                humidity={humidity}\r\n\r\n                pop={pop} />\r\n        )\r\n    }\r\n\r\n    let morningColumn = weatherHelper('Утро', morn, humidity, pop)\r\n    let dayColumn = weatherHelper('День', day, humidity, pop)\r\n    let eveColumn = weatherHelper('Вечер', eve, humidity, pop)\r\n    let nightColumn = weatherHelper('Ночь', night, humidity, pop)\r\n\r\n\r\n    return (\r\n        <div className='weather-daily'>\r\n            <h2>Прогноз на сегодня: {nameLocality}</h2>\r\n            <div className='weather-daily__card'>\r\n                <div className='weather-daily__box-temp'>\r\n                    {morningColumn}\r\n                    {dayColumn}\r\n                    {eveColumn}\r\n                    {nightColumn}\r\n                </div>\r\n                <div className='weather-daily__box-extradata'>\r\n                    {newHumidity}\r\n                    {castomTemp}\r\n                    {castomWind}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherDaily\r\n\r\n\r\n","import React from 'react';\r\nimport './customWrapper.scss'\r\n\r\n\r\nconst CustomWrapper = ({children}) => {\r\n\r\n    \r\n    return (\r\n        <div className='custom-wrapper'>\r\n            {children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CustomWrapper\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { getDailyWeather,imageDailyWeather } from '../weatherReducer/weatherDailyReducer';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport WeatherDaily from './WeatherDaily';\r\nimport { Spin } from 'antd';\r\nimport CustomWrapper from '../helpersFunc/customWrapper/CustomWrapper';\r\n\r\n\r\nconst WeatherDailyComponent=({\r\n    getDailyWeather,\r\n    coordinates,\r\n    dailyTemp,\r\n    humidity,\r\n    nameLocality,\r\n    pop,wind,\r\n    imageDailyWeather,\r\n    extraDataDaily,\r\n    \r\n})=> {\r\n\r\n    const {lat,lon}=coordinates\r\n    const {icon}=extraDataDaily\r\n\r\n    useEffect(()=>{\r\n        getDailyWeather(lat,lon)\r\n        imageDailyWeather(icon)\r\n      },[getDailyWeather,lat,lon,imageDailyWeather,icon])\r\n\r\n      if(!icon){return <Spin tip=\"Loading...\"/>}\r\n \r\n  return (\r\n    <div >\r\n      <CustomWrapper>\r\n        <WeatherDaily\r\n          wind={wind}\r\n          humidity={humidity}\r\n          dailyTemp={dailyTemp}\r\n          pop={pop}\r\n          nameLocality={nameLocality}\r\n        />\r\n      </CustomWrapper>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    coordinates: state.weatherReducer.coordinates,\r\n    dailyTemp: state.weatherDailyReducer.dailyTemp,\r\n    humidity: state.weatherDailyReducer.humidity,\r\n    pop: state.weatherDailyReducer.pop,\r\n    extraDataDaily: state.weatherDailyReducer.extraDataDaily,\r\n    wind: state.weatherDailyReducer.wind,\r\n    iconDailyUrl: state.weatherDailyReducer.iconDailyUrl,\r\n    nameLocality: state.weatherReducer.nameLocality,\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getDailyWeather,imageDailyWeather })\r\n)(WeatherDailyComponent)\r\n","import React from 'react';\r\nimport './weatherHourly.scss';\r\nimport {numTemp} from '../helpersFunc/helpersFunc'\r\n\r\nexport const round = num =>{\r\n    let newNum = num * 100 \r\n     return Math.round(newNum) \r\n }\r\n\r\n\r\nconst WeatherHourly = ({hourlyData,timeZone}) => {\r\n    \r\n    \r\n  \r\n   let hour = hourlyData.map(el=>{\r\n       const {date,temperature,pop,icon} = el\r\n        let temp = numTemp(temperature)\r\n       let time = new Date((date + (timeZone)) * 1000)\r\n       let clock = time.toLocaleTimeString('en-GB',{timeZone: 'UTC'}).slice(0,-3)\r\n       \r\n       return(\r\n        <li key={date} className='hourly-block__list'>\r\n            <p className='hourly-block__time'>\r\n                {clock}\r\n            </p>\r\n            <p className='hourly-block__icon'>\r\n               <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt='gg' />\r\n            </p>\r\n            <p  className='hourly-block__temp'>\r\n                {temp}\r\n            </p>\r\n            <p className='hourly-block__pop'>\r\n               {round(pop)}%\r\n            </p>\r\n            \r\n        </li>\r\n       )\r\n   })\r\n\r\n    return (\r\n        <div className='weather-hourly'>\r\n             <h2>Почасовой прогноз:</h2>\r\n             <ul className='hourly-block'>\r\n                {hour}\r\n             </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherHourly\r\n\r\n\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport CustomWrapper from '../helpersFunc/customWrapper/CustomWrapper';\r\nimport WeatherHourly from './WeatherHourly';\r\n\r\n\r\n\r\n\r\nconst WeatherHourlyComponent=({hourlyData,timeZone})=> {\r\n\r\n  return (\r\n    < >\r\n      <CustomWrapper>\r\n        <WeatherHourly\r\n          hourlyData={hourlyData}\r\n          timeZone={timeZone} />\r\n      </CustomWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    hourlyData: state.weatherDailyReducer.hourlyData,\r\n    timeZone: state.weatherDailyReducer.timeZone,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(WeatherHourlyComponent)\r\n","import React from 'react';\r\nimport { numTemp } from '../helpersFunc/helpersFunc';\r\nimport { round } from '../weatherHourly/WeatherHourly';\r\nimport './dailyForecast.scss';\r\n\r\n\r\n\r\n\r\nconst DailyForecast = ({dailyForecast}) => {\r\n    \r\n   let dailyArr = dailyForecast.map(el=>{\r\n\r\n    const {date,tempMin,tempMax,pop,icon} = el\r\n    let minTemperature = numTemp(tempMin)\r\n    let maxTemperature = numTemp(tempMax)\r\n    let dat = setDayOfWeek(date)\r\n   \r\n   return(\r\n    <li key={date} className='hourly-block__list'>\r\n        <p className='hourly-block__time'>\r\n            {dat}\r\n        </p>\r\n        <p className='hourly-block__icon'>\r\n           <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt='gg' />\r\n        </p>\r\n        <p  className='hourly-block__temp-max'>\r\n            {maxTemperature}\r\n        </p>\r\n        <p  className='hourly-block__temp-min'>\r\n            {minTemperature}\r\n        </p>\r\n        <p className='hourly-block__pop'>\r\n           {round(pop)}%\r\n        </p>\r\n        \r\n    </li>\r\n   )\r\n   })\r\n\r\n    return (\r\n        <div className='weather-hourly' >\r\n            <h2>Суточный прогноз:</h2>\r\n            <ul className='hourly-block'>\r\n                {dailyArr}\r\n            </ul>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyForecast\r\n\r\n\r\nexport const setDayOfWeek = date =>{\r\n    let days = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'];\r\n    let curentDate = new Date(date * 1000)\r\n   let day = curentDate.getDate()\r\n   let dayOfWeek = curentDate.getDay()\r\n   \r\n       \r\n   \r\n\r\n    return(\r\n        `${days[dayOfWeek]} ${day}`\r\n    )\r\n}","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport DailyForecast from './DailyForecast';\r\nimport CustomWrapper from '../helpersFunc/customWrapper/CustomWrapper';\r\n\r\n\r\n\r\n\r\n\r\nconst DailyForecastContainer = ({dailyForecast}) => (\r\n    <>\r\n        <CustomWrapper>\r\n            <DailyForecast dailyForecast={dailyForecast} />\r\n        </CustomWrapper>\r\n    </>\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      dailyForecast : state.weatherDailyReducer.dailyForecast\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(DailyForecastContainer)\r\n","export default __webpack_public_path__ + \"static/media/sun_up.71d4a893.svg\";","export default __webpack_public_path__ + \"static/media/sun_down.d413b24c.svg\";","import { Spin } from 'antd';\r\nimport sun_up from '../../image/sun_up.svg'\r\nimport sun_down from '../../image/sun_down.svg'\r\nimport React from 'react';\r\nimport { numTemp } from '../helpersFunc/helpersFunc';\r\nimport './weatherCurrent.scss';\r\n\r\n\r\n\r\nexport const setSun = (date, timeZone) =>{\r\n    let time = new Date((date + (timeZone)) * 1000)\r\n    // if(!date && !timeZone) return <Spin />\r\n    return time.toLocaleTimeString('en-GB',{timeZone: 'UTC'}).slice(0,-3)\r\n}\r\n\r\n\r\nconst WeatherCurrent = ({detailedWeather,timeZone}) => {\r\n   \r\n    \r\n    const { feels_like, pressure, humidity, dew_point, uvi, clouds, wind_speed, sunrise, sunset } = detailedWeather\r\n\r\n    let sun = (\r\n        \r\n        <p style={{color:'white'}}>\r\n            Восход: <img src={sun_up} alt='up' className='weather-current__up' /> {setSun(sunrise, timeZone)} / Заход: <img src={sun_down} alt='down' className='weather-current__down' /> {setSun(sunset, timeZone)}\r\n        </p>)\r\n    let paragraph = (!timeZone) ? <Spin /> : sun\r\n\r\n    return (\r\n        <div className='weather-current'>\r\n            <h2>Погода на сегодня</h2>\r\n            <div>\r\n                \r\n                {paragraph}\r\n            </div>\r\n            <div className='weather-current__list'>\r\n                <ul className='weather-current__item'>\r\n                    {itemListRender('По ощущению', numTemp(feels_like))}\r\n                    {itemListRender('Давление', pressure)}\r\n                    {itemListRender('Влажность', humidity)}\r\n                    {itemListRender('Точка росы', numTemp(dew_point) )}\r\n                </ul>\r\n                <ul className='weather-current__item'>\r\n                    {itemListRender('Ультрафиолетовый индекс', uvi)}\r\n                    {itemListRender('Облачность', clouds)}\r\n                    {itemListRender('Скорость Ветра', wind_speed)}\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default WeatherCurrent\r\n\r\n\r\nconst itemListRender = (title,elem)=>{\r\n    let sign\r\n    if(title === 'Влажность'){\r\n        sign = '%'\r\n    } else if(title === 'Скорость Ветра'){\r\n        sign = 'м/с'\r\n    }else{sign=''}\r\n\r\n    \r\n    return(\r\n        <li>{title}:  <span>{elem} {sign}</span></li>\r\n    )\r\n}","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport WeatherCurrent from './WeatherCurrent';\r\nimport CustomWrapper from '../helpersFunc/customWrapper/CustomWrapper';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst WeatherCurrentContainer = ({detailedWeather,timeZone}) => (\r\n    <>\r\n        <CustomWrapper>\r\n            <WeatherCurrent detailedWeather={detailedWeather} timeZone={timeZone} /> \r\n        </CustomWrapper>\r\n    </>\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    detailedWeather:state.weatherDailyReducer.detailedWeather,\r\n    timeZone:state.weatherDailyReducer.timeZone,\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(WeatherCurrentContainer)\r\n","export default __webpack_public_path__ + \"static/media/google.13cd331f.svg\";","export default __webpack_public_path__ + \"static/media/telega.4b7f3fd5.svg\";","export default __webpack_public_path__ + \"static/media/viber.69713efe.svg\";","export default __webpack_public_path__ + \"static/media/git_hub.b4f5bb28.svg\";","import React from 'react'\r\nimport './footer.scss'\r\nimport google from '../../image/google.svg'\r\nimport telega from '../../image/telega.svg'\r\nimport viber from '../../image/viber.svg'\r\nimport github from '../../image/git_hub.svg'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n            <div className='footer__link'><span>Свяжитесь со мной:</span> \r\n                <a href='mailto:snstotti@gmail.com'><img src={google} alt='gmail' /></a>\r\n                <a href='viber://chat?number=+79674901470'><img src={viber} alt='viber' /></a>\r\n                <a href='https://github.com/snstotti'><img src={github} alt='github' /></a>\r\n                <a href='https://t.me/NikolayKhanzhin'><img src={telega} alt='telega' /></a>\r\n            </div>\r\n            <div className='footer__progectLinks'>\r\n                    <span>Еще проекты:</span> \r\n                    <ul>\r\n                        <li><a href='https://snstotti.github.io/starDB'>StarDB</a></li>\r\n                        <li><a href='https://snstotti.github.io/fun-box-test-app'>fun box test app</a></li>\r\n                        <li><a href='https://snstotti.github.io/test-app-adminka/'>Adminka</a></li>\r\n                        <li><a href='https://snstotti.github.io/to-do/'>To-do</a></li>\r\n                    </ul>\r\n            </div>\r\n            <div className='footer__apiLink'><span>API:</span><a href='https://openweathermap.org/'><img src='https://openweathermap.org/themes/openweathermap/assets/img/logo_white_cropped.png' alt='api'/></a></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import './header.scss'\r\nimport React from 'react'\r\n\r\n\r\nconst Header =()=>{\r\n   \r\n  \r\n    const clockCover = () => {\r\n        let times = new Date()\r\n        let clocks = times.toLocaleDateString('en-GB').split('/')\r\n        let clocker = clocks.map(el => {\r\n            if (el.length <= 1) {\r\n                return '0' + el\r\n            } return el\r\n        })\r\n        return clocker.join(' . ')\r\n    }\r\n\r\n    return(\r\n        <div className='head'>\r\n            Сегодня <span className='head__date'> {clockCover()} </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport './App.scss';\nimport { setLocality } from './components/weatherReducer/weatherReducer';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport SearchForm from './components/searchForm/SearchForm';\nimport WeatherBrieflyComponent from './components/weatherBriefly/WeatherBrieflyComponent';\nimport WeatherDailyComponent from './components/weatherDaily/WeatherDailyComponent';\nimport WeatherHourlyComponent from './components/weatherHourly/WeatherHourlyComponent';\nimport DailyForecastContainer from './components/dailyForecast/DailyForecastContainer';\nimport WeatherCurrentContainer from './components/weatherCurrent/WeatherCurrentContainer';\nimport Footer from './components/footer/Footer';\nimport Header from './components/header/Header';\n\n\n\nconst App=(props)=> {\n\n  \n\n  const { setLocality } = props\n\n  return (\n    <div className='wrapper'>\n      <header className=\"header\">\n        <Header />\n      </header>\n      <div className=\"app\">\n        <main className=\"app__main\">\n          <SearchForm setLocality={setLocality} />\n          <WeatherBrieflyComponent />\n          <WeatherCurrentContainer />\n          <WeatherDailyComponent />\n          <WeatherHourlyComponent />\n          <DailyForecastContainer />\n        </main>\n       \n      </div>\n      <footer>\n          <Footer />\n        </footer>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n  }\n}\n\n\nexport default compose(\n  connect(mapStateToProps, { setLocality })\n)(App)\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport weatherDailyReducer from '../weatherReducer/weatherDailyReducer';\r\n\r\nimport  weatherReducer  from '../weatherReducer/weatherReducer'\r\n\r\ndeclare global {\r\n    interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n  }\r\n\r\nlet reducer = combineReducers({\r\n  weatherReducer: weatherReducer,\r\n  weatherDailyReducer: weatherDailyReducer,\r\n  \r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport {Provider} from 'react-redux';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport store from './components/redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}